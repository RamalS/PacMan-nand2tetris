class MapAsset
{
    function void top(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 4080);
        do Memory.poke(location + 96, 4104);
        do Memory.poke(location + 128, 8196);
        do Memory.poke(location + 160, 8196);
        do Memory.poke(location + 192, 8196);
        do Memory.poke(location + 224, 8196);
        do Memory.poke(location + 256, 8196);
        do Memory.poke(location + 288, 8196);
        do Memory.poke(location + 320, 8196);
        do Memory.poke(location + 352, 8196);
        do Memory.poke(location + 384, 8196);
        do Memory.poke(location + 416, 8196);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);

        return;
    }

    function void bottom(int location)
    {
        do Memory.poke(location, 8196);
        do Memory.poke(location + 32, 8196);
        do Memory.poke(location + 64, 8196);
        do Memory.poke(location + 96, 8196);
        do Memory.poke(location + 128, 8196);
        do Memory.poke(location + 160, 8196);
        do Memory.poke(location + 192, 8196);
        do Memory.poke(location + 224, 8196);
        do Memory.poke(location + 256, 8196);
        do Memory.poke(location + 288, 8196);
        do Memory.poke(location + 320, 8196);
        do Memory.poke(location + 352, 8196);
        do Memory.poke(location + 384, 4104);
        do Memory.poke(location + 416, 4080);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void left(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, -16);
        do Memory.poke(location + 96, 8);
        do Memory.poke(location + 128, 4);
        do Memory.poke(location + 160, 4);
        do Memory.poke(location + 192, 4);
        do Memory.poke(location + 224, 4);
        do Memory.poke(location + 256, 4);
        do Memory.poke(location + 288, 4);
        do Memory.poke(location + 320, 4);
        do Memory.poke(location + 352, 4);
        do Memory.poke(location + 384, 8);
        do Memory.poke(location + 416, -16);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void right(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 4095);
        do Memory.poke(location + 96, 4096);
        do Memory.poke(location + 128, 8192);
        do Memory.poke(location + 160, 8192);
        do Memory.poke(location + 192, 8192);
        do Memory.poke(location + 224, 8192);
        do Memory.poke(location + 256, 8192);
        do Memory.poke(location + 288, 8192);
        do Memory.poke(location + 320, 8192);
        do Memory.poke(location + 352, 8192);
        do Memory.poke(location + 384, 4096);
        do Memory.poke(location + 416, 4095);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void vertical(int location)
    {
        do Memory.poke(location, 8196);
        do Memory.poke(location + 32, 8196);
        do Memory.poke(location + 64, 8196);
        do Memory.poke(location + 96, 8196);
        do Memory.poke(location + 128, 8196);
        do Memory.poke(location + 160, 8196);
        do Memory.poke(location + 192, 8196);
        do Memory.poke(location + 224, 8196);
        do Memory.poke(location + 256, 8196);
        do Memory.poke(location + 288, 8196);
        do Memory.poke(location + 320, 8196);
        do Memory.poke(location + 352, 8196);
        do Memory.poke(location + 384, 8196);
        do Memory.poke(location + 416, 8196);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);

        return;
    }

    function void horizontal(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, -1);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, -1);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void tl(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, -32);
        do Memory.poke(location + 96, 16);
        do Memory.poke(location + 128, 8);
        do Memory.poke(location + 160, 4);
        do Memory.poke(location + 192, 4);
        do Memory.poke(location + 224, 4);
        do Memory.poke(location + 256, 4);
        do Memory.poke(location + 288, 4);
        do Memory.poke(location + 320, 4);
        do Memory.poke(location + 352, 4);
        do Memory.poke(location + 384, 4);
        do Memory.poke(location + 416, -16380);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);

        return;
    }

    function void tr(int location)
    {
        do Memory.poke(location + 0, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 2047);
        do Memory.poke(location + 96, 2048);
        do Memory.poke(location + 128, 4096);
        do Memory.poke(location + 160, 8192);
        do Memory.poke(location + 192, 8192);
        do Memory.poke(location + 224, 8192);
        do Memory.poke(location + 256, 8192);
        do Memory.poke(location + 288, 8192);
        do Memory.poke(location + 320, 8192);
        do Memory.poke(location + 352, 8192);
        do Memory.poke(location + 384, 8192);
        do Memory.poke(location + 416, 8195);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);


        return;
    }

    function void bl(int location)
    {
        do Memory.poke(location + 0, 8196);
        do Memory.poke(location + 32, 8196);
        do Memory.poke(location + 64, -16380);
        do Memory.poke(location + 96, 4);
        do Memory.poke(location + 128, 4);
        do Memory.poke(location + 160, 4);
        do Memory.poke(location + 192, 4);
        do Memory.poke(location + 224, 4);
        do Memory.poke(location + 256, 4);
        do Memory.poke(location + 288, 4);
        do Memory.poke(location + 320, 4);
        do Memory.poke(location + 352, 8);
        do Memory.poke(location + 384, 16);
        do Memory.poke(location + 416, -32);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void br(int location)
    {
    do Memory.poke(location, 8196);
    do Memory.poke(location + 32, 8196);
    do Memory.poke(location + 64, 8195);
    do Memory.poke(location + 96, 8192);
    do Memory.poke(location + 128, 8192);
    do Memory.poke(location + 160, 8192);
    do Memory.poke(location + 192, 8192);
    do Memory.poke(location + 224, 8192);
    do Memory.poke(location + 256, 8192);
    do Memory.poke(location + 288, 8192);
    do Memory.poke(location + 320, 8192);
    do Memory.poke(location + 352, 4096);
    do Memory.poke(location + 384, 2048);
    do Memory.poke(location + 416, 2047);
    do Memory.poke(location + 448, 0);
    do Memory.poke(location + 480, 0);

        return;
    }

    function void dot(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 960);
        do Memory.poke(location + 224, 960);
        do Memory.poke(location + 256, 960);
        do Memory.poke(location + 288, 960);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void ability(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 960);
        do Memory.poke(location + 160, 2016);
        do Memory.poke(location + 192, 4080);
        do Memory.poke(location + 224, 4080);
        do Memory.poke(location + 256, 4080);
        do Memory.poke(location + 288, 4080);
        do Memory.poke(location + 320, 2016);
        do Memory.poke(location + 352, 960);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void ht(int location)
    {
        do Memory.poke(location, 8196);
        do Memory.poke(location + 32, 8196);
        do Memory.poke(location + 64, -16381);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, -1);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void hb(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, -1);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, -16381);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);

        return;
    }

    function void vr(int location)
    {
        do Memory.poke(location, 8196);
        do Memory.poke(location + 32, 8196);
        do Memory.poke(location + 64, -16380);
        do Memory.poke(location + 96, 4);
        do Memory.poke(location + 128, 4);
        do Memory.poke(location + 160, 4);
        do Memory.poke(location + 192, 4);
        do Memory.poke(location + 224, 4);
        do Memory.poke(location + 256, 4);
        do Memory.poke(location + 288, 4);
        do Memory.poke(location + 320, 4);
        do Memory.poke(location + 352, 4);
        do Memory.poke(location + 384, 4);
        do Memory.poke(location + 416, -16380);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);

        return;
    }

    function void vl(int location)
    {
        do Memory.poke(location, 8196);
        do Memory.poke(location + 32, 8196);
        do Memory.poke(location + 64, 8195);
        do Memory.poke(location + 96, 8192);
        do Memory.poke(location + 128, 8192);
        do Memory.poke(location + 160, 8192);
        do Memory.poke(location + 192, 8192);
        do Memory.poke(location + 224, 8192);
        do Memory.poke(location + 256, 8192);
        do Memory.poke(location + 288, 8192);
        do Memory.poke(location + 320, 8192);
        do Memory.poke(location + 352, 8192);
        do Memory.poke(location + 384, 8192);
        do Memory.poke(location + 416, 8195);
        do Memory.poke(location + 448, 8196);
        do Memory.poke(location + 480, 8196);

        return;
    }

    function void genterLeft(int location)
    {
        do Memory.poke(location + 0, 0);
        do Memory.poke(location + 32, 7);
        do Memory.poke(location + 64, -1);
        do Memory.poke(location + 96, 7);
        do Memory.poke(location + 128, -1);
        do Memory.poke(location + 160, 7);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void genterRight(int location)
    {
        do Memory.poke(location + 0, 0);
        do Memory.poke(location + 32, -8192);
        do Memory.poke(location + 64, -1);
        do Memory.poke(location + 96, -8192);
        do Memory.poke(location + 128, -1);
        do Memory.poke(location + 160, -8192);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void thinhb(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, -1);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, -1);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void thinht(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, -1);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, -1);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void thinvl(int location)
    {
        do Memory.poke(location, 34);
        do Memory.poke(location + 32, 34);
        do Memory.poke(location + 64, 34);
        do Memory.poke(location + 96, 34);
        do Memory.poke(location + 128, 34);
        do Memory.poke(location + 160, 34);
        do Memory.poke(location + 192, 34);
        do Memory.poke(location + 224, 34);
        do Memory.poke(location + 256, 34);
        do Memory.poke(location + 288, 34);
        do Memory.poke(location + 320, 34);
        do Memory.poke(location + 352, 34);
        do Memory.poke(location + 384, 34);
        do Memory.poke(location + 416, 34);
        do Memory.poke(location + 448, 34);
        do Memory.poke(location + 480, 34);

        return;
    }

    function void thinvr(int location)
    {
        do Memory.poke(location, 17408);
        do Memory.poke(location + 32, 17408);
        do Memory.poke(location + 64, 17408);
        do Memory.poke(location + 96, 17408);
        do Memory.poke(location + 128, 17408);
        do Memory.poke(location + 160, 17408);
        do Memory.poke(location + 192, 17408);
        do Memory.poke(location + 224, 17408);
        do Memory.poke(location + 256, 17408);
        do Memory.poke(location + 288, 17408);
        do Memory.poke(location + 320, 17408);
        do Memory.poke(location + 352, 17408);
        do Memory.poke(location + 384, 17408);
        do Memory.poke(location + 416, 17408);
        do Memory.poke(location + 448, 17408);
        do Memory.poke(location + 480, 17408);

        return;
    }

    function void thintl(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, -4096);
        do Memory.poke(location + 352, 2048);
        do Memory.poke(location + 384, 1024);
        do Memory.poke(location + 416, 1024);
        do Memory.poke(location + 448, -31744);
        do Memory.poke(location + 480, 17408);

        return;
    }

    function void thintr(int location)
    {
        do Memory.poke(location, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 15);
        do Memory.poke(location + 352, 16);
        do Memory.poke(location + 384, 32);
        do Memory.poke(location + 416, 32);
        do Memory.poke(location + 448, 33);
        do Memory.poke(location + 480, 34);

        return;
    }

    function void thinbr(int location)
    {
        do Memory.poke(location, 34);
        do Memory.poke(location + 32, 33);
        do Memory.poke(location + 64, 32);
        do Memory.poke(location + 96, 32);
        do Memory.poke(location + 128, 16);
        do Memory.poke(location + 160, 15);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void thinbl(int location)
    {
        do Memory.poke(location, 17408);
        do Memory.poke(location + 32, -31744);
        do Memory.poke(location + 64, 1024);
        do Memory.poke(location + 96, 1024);
        do Memory.poke(location + 128, 2048);
        do Memory.poke(location + 160, -4096);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void thintle(int location)
    {
        do Memory.poke(location + 0, 0);
        do Memory.poke(location + 32, -8);
        do Memory.poke(location + 64, 4);
        do Memory.poke(location + 96, 2);
        do Memory.poke(location + 128, 2);
        do Memory.poke(location + 160, -62);
        do Memory.poke(location + 192, 34);
        do Memory.poke(location + 224, 34);
        do Memory.poke(location + 256, 34);
        do Memory.poke(location + 288, 34);
        do Memory.poke(location + 320, 34);
        do Memory.poke(location + 352, 34);
        do Memory.poke(location + 384, 34);
        do Memory.poke(location + 416, 34);
        do Memory.poke(location + 448, 34);
        do Memory.poke(location + 480, 34);

        return;
    }

    function void thintre(int location)
    {
        do Memory.poke(location + 0, 0);
        do Memory.poke(location + 32, 8191);
        do Memory.poke(location + 64, 8192);
        do Memory.poke(location + 96, 16384);
        do Memory.poke(location + 128, 16384);
        do Memory.poke(location + 160, 17407);
        do Memory.poke(location + 192, 17408);
        do Memory.poke(location + 224, 17408);
        do Memory.poke(location + 256, 17408);
        do Memory.poke(location + 288, 17408);
        do Memory.poke(location + 320, 17408);
        do Memory.poke(location + 352, 17408);
        do Memory.poke(location + 384, 17408);
        do Memory.poke(location + 416, 17408);
        do Memory.poke(location + 448, 17408);
        do Memory.poke(location + 480, 17408);

        return;
    }

    function void thinbre(int location)
    {
        do Memory.poke(location + 0, 17408);
        do Memory.poke(location + 32, 17408);
        do Memory.poke(location + 64, 17408);
        do Memory.poke(location + 96, 17408);
        do Memory.poke(location + 128, 17408);
        do Memory.poke(location + 160, 17408);
        do Memory.poke(location + 192, 17408);
        do Memory.poke(location + 224, 17408);
        do Memory.poke(location + 256, 17408);
        do Memory.poke(location + 288, 17408);
        do Memory.poke(location + 320, 17407);
        do Memory.poke(location + 352, 16384);
        do Memory.poke(location + 384, 16384);
        do Memory.poke(location + 416, 8192);
        do Memory.poke(location + 448, 8191);
        do Memory.poke(location + 480, 0);

        return;
    }

    function void thinble(int location)
    {
        do Memory.poke(location + 0, 34);
        do Memory.poke(location + 32, 34);
        do Memory.poke(location + 64, 34);
        do Memory.poke(location + 96, 34);
        do Memory.poke(location + 128, 34);
        do Memory.poke(location + 160, 34);
        do Memory.poke(location + 192, 34);
        do Memory.poke(location + 224, 34);
        do Memory.poke(location + 256, 34);
        do Memory.poke(location + 288, 34);
        do Memory.poke(location + 320, -62);
        do Memory.poke(location + 352, 2);
        do Memory.poke(location + 384, 2);
        do Memory.poke(location + 416, 4);
        do Memory.poke(location + 448, -8);
        do Memory.poke(location + 480, 0);

        return;
    }
}