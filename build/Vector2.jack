class Vector2
{
    field int x, y;

    constructor Vector2 new(int _x, int _y)
    {
        let x = _x;
        let y = _y;

        return this;
    }

    method void dispose()
    {
      do Memory.deAlloc(this);

      return;
    }

    method int getX() { return x; }
    method int getY() { return y; }

    method void set(Vector2 vec2)
    {
        let x = vec2.getX();
        let y = vec2.getY();
        return;
    }

    method void setX(int t)
    {
        let x = t;
        return;
    }

    method void setY(int t)
    {
        let y = t;
        return;
    }

    method void incX()
    {
        let x = x + 1;
        return;
    }

    method void incY()
    {
        let y = y + 1;
        return;
    }

    method void decX()
    {
        let x = x - 1;
        return;
    }

    method void decY()
    {
        let y = y - 1;
        return;
    }

    method int distance(Vector2 pos)
    {
        var int a, b, c;
        let a = Math.max(x, pos.getX()) - Math.min(x, pos.getX());
        let b = Math.max(y, pos.getY()) - Math.min(y, pos.getY());
        let c = (a * a) + (b * b);
        
        return c;
    }

    method void sub(Vector2 v)
    {
        let x = x - v.getX();
        let y = y - v.getY();

        return;
    }

    // Important to pass squared radius.
    method bool pointInRadius(Vector2 v, int radiusSquared)
    {
        if (distance(v) < radiusSquared)
            { return true; }
        return false;
    }
}