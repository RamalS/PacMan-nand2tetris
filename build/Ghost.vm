function Ghost.new 0
push constant 17
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 4
push constant 0
pop this 11
push constant 0
pop this 12
push argument 2
pop this 13
push argument 0
push argument 1
call ScreenManager.getLocation 2
pop this 0
push argument 1
push constant 32
call Math.multiply 2
push argument 0
add
pop this 3
push this 3
pop this 2
push argument 0
push argument 1
call Vector2.new 2
pop this 14
push argument 0
push argument 1
call Vector2.new 2
pop this 15
push constant 15
push constant 8
call Vector2.new 2
pop this 16
push pointer 0
return
function Ghost.reset 2
push argument 0
pop pointer 0
push this 15
call Vector2.getX 1
pop local 0
push this 15
call Vector2.getY 1
pop local 1
push constant 0
pop this 4
push constant 0
pop this 11
push constant 0
pop this 12
push local 0
push local 1
call ScreenManager.getLocation 2
pop this 0
push local 1
push constant 32
call Math.multiply 2
push local 0
add
pop this 3
push this 14
push this 15
call Vector2.set 2
pop temp 0
push this 3
pop this 2
push constant 0
return
function Ghost.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ghost.checkCollisionUp 0
push argument 0
pop pointer 0
push this 3
push constant 32
sub
call Game.grid 1
push constant 7
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Ghost.checkCollisionDown 0
push argument 0
pop pointer 0
push this 3
push constant 32
add
call Game.grid 1
push constant 7
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Ghost.checkCollisionLeft 0
push argument 0
pop pointer 0
push this 3
push constant 1
sub
call Game.grid 1
push constant 7
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Ghost.checkCollisionRight 0
push argument 0
pop pointer 0
push this 3
push constant 1
add
call Game.grid 1
push constant 7
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Ghost.getLocation 0
push argument 0
pop pointer 0
push this 0
return
function Ghost.getLastLocation 0
push argument 0
pop pointer 0
push this 1
return
function Ghost.getGridIndex 0
push argument 0
pop pointer 0
push this 3
return
function Ghost.getLastIndex 0
push argument 0
pop pointer 0
push this 4
return
function Ghost.getAM 0
push argument 0
pop pointer 0
push this 13
return
function Ghost.bindAnimations 0
push argument 0
pop pointer 0
push argument 1
pop this 5
push argument 2
pop this 6
push argument 3
pop this 7
push argument 4
pop this 8
push argument 5
pop this 9
push argument 6
pop this 10
push constant 0
return
function Ghost.checkIntersect 0
push argument 0
pop pointer 0
push this 3
call Game.pacManGridIndex 0
eq
call Game.isFrightened 0
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 11
push this 3
push constant 1
add
push constant 10
call Game.increaseScore 2
pop temp 0
goto IF_END0
label IF_FALSE0
call Game.isFrightened 0
not
push this 11
and
push this 3
and
push this 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 11
goto IF_END1
label IF_FALSE1
push this 3
call Game.pacManGridIndex 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
call Game.decHP 0
pop temp 0
label IF_FALSE2
label IF_END1
label IF_END0
push constant 0
return
function Ghost.isDead 0
push argument 0
pop pointer 0
push this 11
return
function Ghost.isHome 0
push argument 0
pop pointer 0
push this 3
push this 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 11
label IF_FALSE0
push constant 0
return
function Ghost.isReseted 0
push argument 0
pop pointer 0
push this 12
return
function Ghost.setReseted 0
push argument 0
pop pointer 0
push argument 1
pop this 12
push constant 0
return
function Ghost.moveInit 0
push argument 0
pop pointer 0
push this 0
pop this 1
push this 3
pop this 4
push constant 0
return
function Ghost.moveRight 0
push argument 0
pop pointer 0
push pointer 0
call Ghost.moveInit 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 3
push constant 1
add
pop this 3
push this 14
call Vector2.incX 1
pop temp 0
push this 13
push argument 1
call AnimationManager.set 2
pop temp 0
push constant 0
return
function Ghost.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
call Ghost.moveInit 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push this 3
push constant 1
sub
pop this 3
push this 14
call Vector2.decX 1
pop temp 0
push this 13
push argument 1
call AnimationManager.set 2
pop temp 0
push constant 0
return
function Ghost.moveUp 0
push argument 0
pop pointer 0
push pointer 0
call Ghost.moveInit 1
pop temp 0
push this 0
push constant 512
sub
pop this 0
push this 3
push constant 32
sub
pop this 3
push this 14
call Vector2.decY 1
pop temp 0
push this 13
push argument 1
call AnimationManager.set 2
pop temp 0
push constant 0
return
function Ghost.moveDown 0
push argument 0
pop pointer 0
push pointer 0
call Ghost.moveInit 1
pop temp 0
push this 0
push constant 512
add
pop this 0
push this 3
push constant 32
add
pop this 3
push this 14
call Vector2.incY 1
pop temp 0
push this 13
push argument 1
call AnimationManager.set 2
pop temp 0
push constant 0
return
function Ghost.resetPosition 0
push argument 0
pop pointer 0
push pointer 0
call Ghost.moveInit 1
pop temp 0
push constant 0
not
pop this 12
push this 14
push this 15
call Vector2.set 2
pop temp 0
push this 14
call Vector2.getX 1
push this 14
call Vector2.getY 1
call ScreenManager.getLocation 2
pop this 0
push this 14
call Vector2.getY 1
push constant 32
call Math.multiply 2
push this 14
call Vector2.getX 1
add
pop this 3
push this 13
push argument 1
call AnimationManager.set 2
pop temp 0
push constant 0
return
function Ghost.moveToPointAnim 3
push argument 0
pop pointer 0
push constant 1300
pop local 0
push this 4
push this 3
push constant 32
sub
eq
not
push pointer 0
call Ghost.checkCollisionUp 1
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 14
call Vector2.decY 1
pop temp 0
push this 14
push argument 1
call Vector2.distance 2
pop local 2
push local 2
push local 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
pop local 0
push constant 1
pop local 1
label IF_FALSE1
push this 14
call Vector2.incY 1
pop temp 0
label IF_FALSE0
push this 4
push this 3
push constant 1
sub
eq
not
push pointer 0
call Ghost.checkCollisionLeft 1
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 14
call Vector2.decX 1
pop temp 0
push this 14
push argument 1
call Vector2.distance 2
pop local 2
push local 2
push local 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
pop local 0
push constant 2
pop local 1
label IF_FALSE3
push this 14
call Vector2.incX 1
pop temp 0
label IF_FALSE2
push this 4
push this 3
push constant 32
add
eq
not
push pointer 0
call Ghost.checkCollisionDown 1
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 14
call Vector2.incY 1
pop temp 0
push this 14
push argument 1
call Vector2.distance 2
pop local 2
push local 2
push local 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
pop local 0
push constant 3
pop local 1
label IF_FALSE5
push this 14
call Vector2.decY 1
pop temp 0
label IF_FALSE4
push this 4
push this 3
push constant 1
add
eq
not
push pointer 0
call Ghost.checkCollisionRight 1
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 14
call Vector2.incX 1
pop temp 0
push this 14
push argument 1
call Vector2.distance 2
pop local 2
push local 2
push local 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 2
pop local 0
push constant 4
pop local 1
label IF_FALSE7
push this 14
call Vector2.decX 1
pop temp 0
label IF_FALSE6
push local 1
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push argument 2
call Ghost.moveUp 2
pop temp 0
goto IF_END8
label IF_FALSE8
push local 1
push constant 2
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
push argument 3
call Ghost.moveLeft 2
pop temp 0
goto IF_END9
label IF_FALSE9
push local 1
push constant 3
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push argument 4
call Ghost.moveDown 2
pop temp 0
goto IF_END10
label IF_FALSE10
push local 1
push constant 4
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push pointer 0
push argument 5
call Ghost.moveRight 2
pop temp 0
label IF_FALSE11
label IF_END10
label IF_END9
label IF_END8
push constant 0
return
function Ghost.moveToPoint 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push this 5
push this 6
push this 7
push this 8
call Ghost.moveToPointAnim 6
pop temp 0
push constant 0
return
function Ghost.moveToHome 0
push argument 0
pop pointer 0
push pointer 0
push this 16
push this 10
push this 10
push this 10
push this 10
call Ghost.moveToPointAnim 6
pop temp 0
push constant 0
return
function Ghost.frightenedState 2
push argument 0
pop pointer 0
push constant 1
push constant 4
call LCGRandom.randRange 2
pop local 0
push constant 0
not
pop local 1
label WHILE_EXP0
push local 1
not
if-goto WHILE_END0
push local 0
push constant 1
eq
push this 4
push this 3
push constant 32
sub
eq
not
and
push pointer 0
call Ghost.checkCollisionUp 1
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 9
call Ghost.moveUp 2
pop temp 0
push constant 0
pop local 1
goto IF_END0
label IF_FALSE0
push local 0
push constant 2
eq
push this 4
push this 3
push constant 1
sub
eq
not
and
push pointer 0
call Ghost.checkCollisionLeft 1
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 9
call Ghost.moveLeft 2
pop temp 0
push constant 0
pop local 1
goto IF_END1
label IF_FALSE1
push local 0
push constant 3
eq
push this 4
push this 3
push constant 32
add
eq
not
and
push pointer 0
call Ghost.checkCollisionDown 1
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push this 9
call Ghost.moveDown 2
pop temp 0
push constant 0
pop local 1
goto IF_END2
label IF_FALSE2
push local 0
push constant 4
eq
push this 4
push this 3
push constant 1
add
eq
not
and
push pointer 0
call Ghost.checkCollisionRight 1
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push this 9
call Ghost.moveRight 2
pop temp 0
push constant 0
pop local 1
goto IF_END3
label IF_FALSE3
push constant 1
push constant 4
call LCGRandom.randRange 2
pop local 0
label IF_END3
label IF_END2
label IF_END1
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Ghost.drawNext 0
push argument 0
pop pointer 0
push this 1
call Constants.getScreen 0
gt
push this 0
push this 1
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
call Game.grid 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call MapAsset.dot 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 4
call Game.grid 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
call ScreenManager.clearBlock 1
pop temp 0
goto IF_END2
label IF_FALSE2
push this 4
call Game.grid 1
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
call MapAsset.ability 1
pop temp 0
goto IF_END3
label IF_FALSE3
push this 4
call Game.grid 1
push constant 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
call MapAsset.genterLeft 1
pop temp 0
goto IF_END4
label IF_FALSE4
push this 4
call Game.grid 1
push constant 6
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 1
call MapAsset.genterRight 1
pop temp 0
goto IF_END5
label IF_FALSE5
push this 4
call Game.grid 1
push constant 4
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 1
call ScreenManager.clearBlock 1
pop temp 0
goto IF_END6
label IF_FALSE6
push this 4
call Game.grid 1
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 1
call ScreenManager.clearBlock 1
pop temp 0
label IF_FALSE7
label IF_END6
label IF_END5
label IF_END4
label IF_END3
label IF_END2
label IF_END1
label IF_FALSE0
push this 13
push this 0
call AnimationManager.drawNext 2
pop temp 0
push constant 0
return
