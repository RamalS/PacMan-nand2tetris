class Animation
{
    field Array sprites;
    field int counter, size, iterator;

    constructor Animation new(int s)
    {
        let sprites = Array.new(s);
        let counter = 0;
        let iterator = 0;
        let size = s;

        return this;
    }

    method void dispose()
    {
        do sprites.dispose();
        do Memory.deAlloc(this);
        
        return;
    }

    method void add(Array sprite)
    {
        let sprites[counter] = sprite;
        let counter = counter + 1;

        return; 
    }

    method void setKeyFrame(int frame)
    {
        if (frame < size)
            { let iterator = frame; }
        else
            { do Sys.error(300); }

        return;
    }

    method bool isDone()
    {
        if (iterator = (size - 1))
            { return true; }
        else
            { return false; }
    }

    method bool next(int location)
    {   
        var bool result;
        var Array sprite;

        let sprite = sprites[iterator];
    
        do Memory.poke(location, sprite[0]);
        do Memory.poke(location + 32, sprite[1]);
        do Memory.poke(location + 64, sprite[2]);
        do Memory.poke(location + 96, sprite[3]);
        do Memory.poke(location + 128, sprite[4]);
        do Memory.poke(location + 160, sprite[5]);
        do Memory.poke(location + 192, sprite[6]);
        do Memory.poke(location + 224, sprite[7]);
        do Memory.poke(location + 256, sprite[8]);
        do Memory.poke(location + 288, sprite[9]);
        do Memory.poke(location + 320, sprite[10]);
        do Memory.poke(location + 352, sprite[11]);
        do Memory.poke(location + 384, sprite[12]);
        do Memory.poke(location + 416, sprite[13]);
        do Memory.poke(location + 448, sprite[14]);
        do Memory.poke(location + 480, sprite[15]);

        let result = isDone();

        let iterator = iterator + 1;
        if (iterator = size)
        {
            let iterator = 0;
        }

        return result;
    }
}