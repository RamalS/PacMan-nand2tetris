class Game
{
    static bool run;
    static int scatterState;

    static int score, dotsEaten, hp, totalDots, factor, scatterDuration, frightenedDuration;
    static bool scatter, frightened;
    static PacMan pacMan;
    static Pinky pinky;
    static Blinky blinky;
    static Clyde clyde;
    static Inky inky;
    static Array map;

    function void init()
    {
        var int i, j, index, pacManX, pacManY;

        let i = 0;
        let j = 0;
        let totalDots = 0;
        let map = ClassicMap.initMap();

        while (i < 16)
        {
            if (j = 32)
            {
                let i = i + 1;
                let j = 0;
            }

            let index = i * 32 + j;

            if (Game.grid(index) = 1)
                { let totalDots = totalDots + 1; }

            if (Game.grid(index) = 4)
            {
                let pacManX = j;
                let pacManY = i;
            }

            let j = j + 1;
        }

        let pacMan = PacMan.new(pacManX, pacManY);
        let pinky = Pinky.new(15, 7);
        let blinky = Blinky.new(16, 7);
        let inky = Inky.new(15, 8);
        let clyde = Clyde.new(16, 8);

        return;
    }

    function void reset(bool resetScore)
    {
        do Memory.deAlloc(map);
        let map = ClassicMap.initMap();

        if (resetScore)
            { let score = 0; }
        else
        {
            do Sys.wait(1000);
            do ScreenManager.clearScreenAnimated();
        }
        
        let hp = 3;
        let dotsEaten = 0;
        let scatterState = 0;
        let scatterDuration = 2000;
        let frightenedDuration = 2000;

        let run = true;
        let scatter = true;
        let frightened = false;

        do pinky.reset();
        do blinky.reset();
        do inky.reset();
        do clyde.reset();
        do pacMan.reset();
        do ClassicMap.draw();

        do Output.moveCursor(0, 2);
        do Output.printString("Score: ");
        do Output.printInt(score);

        do Output.moveCursor(0, 13);
        do Output.printString("Lives: ");
        do Output.printInt(hp);

        return;
    }

    function void dispose()
    {
        do pacMan.dispose();
        do pinky.dispose();
        do blinky.dispose();
        do inky.dispose();
        do clyde.dispose();
        do Memory.deAlloc(map);

        return;
    }

    function void setRun(bool _run)
    {
        let run = _run;

        return;
    }

    function void setSeed()
    {
        do LCGRandom.setSeed(factor);

        return;
    }

    function void increaseScore(int index, int x)
    {
        let score = score + x;
        let dotsEaten = dotsEaten + 1;
        do Game.setGrid(index, 0);
        do Output.moveCursor(0, 2);
        do Output.printString("Score: ");
        do Output.printInt(score);

        if (dotsEaten = totalDots)
        {
            let dotsEaten = 0;
            do Game.reset(false);
        }

        return;
    }

    function void decHP()
    {
        let hp = hp - 1;
        do pacMan.resetPosition();
        do clyde.resetPosition();
        do inky.resetPosition();
        do blinky.resetPosition();
        do pinky.resetPosition();
        do Output.moveCursor(0, 13);
        do Output.printString("Lives: ");
        do Output.printInt(hp);
       
        return;
    }

    function int getHp() { return hp; }

    function int grid(int i)
    {
        var int x;
        let x = map[i];

        return x;
    }

    function void setGrid(int i, int x)
    {
        let map[i] = x;

        return;
    }

    function Vector2 pacManPosition()
    {
        return pacMan.getPosition();
    }

    function int pacManLocation()
    {
        return pacMan.getLocation();
    }

    function int pacManGridIndex()
    {
        return pacMan.getGridIndex();
    }

    function int pacManDirection()
    {
        return pacMan.getDirection();
    }

    function int blinkyGetPosition()
    {
        return blinky.getPosition();
    }

    function bool isScatter()
    {
        return scatter;
    }

    function void setFrightened()
    {
        let frightened = true;

        return;
    }

    function bool isFrightened()
    {
        return frightened;
    }

    function void loop()
    {
        var int drawDuration, moveDuration;

        let drawDuration = 10;
        let moveDuration = 10;
        do LCGRandom.setSeed(1234);

        while (run)
        {
            if (moveDuration < 0)
            {
                do clyde.checkIntersect();
                do inky.checkIntersect();
                do blinky.checkIntersect();
                do pinky.checkIntersect();

                do clyde.move();
                do inky.move();
                do blinky.move();
                do pinky.move();
                do pacMan.move();
                let moveDuration = 40;
            }

            if (drawDuration < 0)
            {
                do pacMan.draw();
                do pinky.draw();
                do blinky.draw();
                do inky.draw();
                do clyde.draw();
                let drawDuration = 20;
            }

            if (frightened)
            {
                if (frightenedDuration < 0)
                {
                    let frightenedDuration = 2000;
                    let frightened = false;
                }

                let frightenedDuration = frightenedDuration - 1;
            }
            else
                { let scatterDuration = scatterDuration - 1; }

            if (scatterDuration < 0)
            {
                if (scatterState < 7)
                {
                    let scatter = ~scatter;
                    let scatterDuration = 2000;
                    let scatterState = scatterState + 1;
                }
            }

            do pacMan.input();

            let drawDuration = drawDuration - 1;
            let moveDuration = moveDuration - 1;
            let factor = 80;

            while(factor > 0)
                { let factor = factor - 1; }
        }

        return;
    }
}