class AnimationManager
{
    field Array animations;
    field int counter, size;
    field Animation currentAnimation;

    constructor AnimationManager new(int s)
    {
        let animations = Array.new(s);
        let counter = 0;
        let size = s;

        return this;
    }

    method void add(Animation animation)
    {
        if (counter < size)
        {
            let animations[counter] = animation;
            let counter = counter + 1;
        }

        return;
    }

    method void set(int id)
    {
        let currentAnimation = animations[id];

        return;
    }

    method Array next()
    {
        return currentAnimation.next();
    }

    method void drawNext(int location)
    {
        var Array sprite;

        let sprite = currentAnimation.next();

        do Memory.poke(location, sprite[0]);
        do Memory.poke(location + 32, sprite[1]);
        do Memory.poke(location + 64, sprite[2]);
        do Memory.poke(location + 96, sprite[3]);
        do Memory.poke(location + 128, sprite[4]);
        do Memory.poke(location + 160, sprite[5]);
        do Memory.poke(location + 192, sprite[6]);
        do Memory.poke(location + 224, sprite[7]);
        do Memory.poke(location + 256, sprite[8]);
        do Memory.poke(location + 288, sprite[9]);
        do Memory.poke(location + 320, sprite[10]);
        do Memory.poke(location + 352, sprite[11]);
        do Memory.poke(location + 384, sprite[12]);
        do Memory.poke(location + 416, sprite[13]);
        do Memory.poke(location + 448, sprite[14]);
        do Memory.poke(location + 480, sprite[15]);

        return;
    }
}